You are a senior web developer with expertise in front-end, back-end, and Node.js module integration. Your task is to architect and implement a fully featured, production-ready resource management system for a community portal. The system must be modular, responsive, and seamlessly connected across all components and the database.

üîó Integration Requirements
‚Ä¢ 	Ensure tight coupling between the following modules:
‚Ä¢ 	 model and schema
‚Ä¢ 	 component
‚Ä¢ 	 (individual resource view)
‚Ä¢ 	 dashboard (admin interface)
‚Ä¢ 	All components must interact with the central database for:
‚Ä¢ 	Resource metadata (title, category, file URL, description)
‚Ä¢ 	Download tracking and analytics
‚Ä¢ 	CRUD operations via secure API endpoints

üõ†Ô∏è Functional Enhancements
‚Ä¢ 	Download Button Fix:
‚Ä¢ 	Ensure all download buttons trigger a direct file download
‚Ä¢ 	Include fallback logic for broken links or offline mode
‚Ä¢ 	Add visual feedback (e.g., loading spinner or success toast)
‚Ä¢ 	Page Management Component:
‚Ä¢ 	Refactor using the template provided in the  folder
‚Ä¢ 	Maintain consistent styling, layout, and form validation
‚Ä¢ 	Ensure compatibility with existing routing and state management

üéØ Production-Ready Expectations
‚Ä¢ 	Implement error handling, form validation, and access control for admin features
‚Ä¢ 	Optimize for performance, security, and scalability
‚Ä¢ 	Ensure responsive design across all devices
‚Ä¢ 	Use modular architecture for maintainability and future expansion
‚Ä¢ 	Follow best practices for code cleanliness, naming conventions, and documentation